#b
set.seed(123)
I2 <- mean(exp(sqrt(runif(R, 0,2))))  #2.703
sd(I2)
sd(I2)/sqrt(R)
#c
R <- 1000
my_integral <- function(f, g, R){
x <- rnorm(R)
mean((f(x)/g(x))*dnorm(x))
}
library(MASS)
data("faithful")
hist(faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
long_waiting <- faithful$waiting[faithful$eruptions >3]
short_waiting <- faithful$waiting[faithful$eruptions <=3]
long <- ecdf(long_waiting)
ecdf_short <- ecdf(short_waiting)
par(mfrow=c(1,2))
plot(ecdf_long, col="red")
plot(ecdf_short, col="blue")
mean(long_waiting)  #79.988
ecdf_long <- ecdf(long_waiting)
ecdf_short <- ecdf(short_waiting)
par(mfrow=c(1,2))
plot(ecdf_long, col="red")
plot(ecdf_short, col="blue")
mean(long_waiting)  #79.988
median(long_waiting)#80
mean(short_waiting) #54.494
median(short_waiting) #54
asym <- function(x){
q1 <- quantile(ecdf(x), 0.25)
q2 <- quantile(ecdf(x), 0.5)
q3 <- quantile(ecdf(x), 0.75)
(q3-2*q2+q1)/(q3-q1)
}
asym(long_waiting) #0
asym(short_waiting) #0.1111
#a
R <- 10^3
qJB <- function(p, n, R){
v <- 0
for(i in 1:R){
X <- rnorm(n)
P_asym <- (1/sd(X)^3)*mean((X-mean(X))^3)
P_curt <- (1/sd(X)^4)*mean((X-mean(X))^4)
JB <- (n/6)*(P_asym^2+((P_curt-3)^2)/4)
v[i] <- JB
}
e <- ecdf(v)
quantile(e, p)
}
qJB(0.95, 50, 1000) #circa 4.64
#es1.a
y<-rnorm(10^5)
X <- rnorm(10^5)
f<-exp(sqrt(x*y))
mean(f)
#es1.a
y <-rnorm(10^5)
X <- rnorm(10^5)
f<-exp(sqrt(x*y))
mean(f)
#es1b
X <- rnorm(10^5)
hX <- exp(sqrt(x))
mean(hX)
sd(hX) / sqrt(10^5)
integrate(function(x) exp(sqrt(x)) * dnorm(x), 0, 2)
#es1.c
my_integral<-function(f, g, R=1000){
f<-function(x){dnorm(x, 0, 1)}
g<-function(x){dnorm(x, 0, 1)}
mean((f(R, 0, 1))/g(R, 0, 1))
}
#es2a
library(MASS)
data('faithful')
hist(faithful$waiting)
plot(faithful$eruptions)
plot(faithful$waiting)
#es2b
long_waiting<-faithful$eruptions[faithful$eruptions>3]
short_waiting<-faithful$eruptions[faithful$eruptions<=3]
#es2c
plot(ecdf(long_waiting))
plot(ecdf(short_waiting), col = "red", add = TRUE)
summary(long_waiting)
summary(short_waiting)
#es2d
asym<-function(x){
(quantile(x, probs = 0.75)-2*median(x)+quantile(x, probs = 0.25))/(diff(quantile(x, probs = c(0.25, 0.75))))
}
asym(long_waiting)
asym(short_waiting)
#es3a
gamma0<-function(x){mean(x-mean(x))^3/sd(x)^3}
k0<-function(x){mean(x-mean(x))^4/sd(x)^4}
n<-length(x)
R<-1000
replicate(R, mean(rnorm(n, 0, 1)))
JB<-function(gamma0, k0, x, n){
(n/6*((gamma0^2)+((k0-3)^2)/4))
}
JB(rnorm(50))
#a
R <- 10^5
set.seed(123)
I1 <- mean(exp(sqrt(runif(R, 0, 1)*runif(R, 0, 1))))
#b
set.seed(123)
I2 <- mean(exp(sqrt(runif(R, 0,2))))  #2.703
sd(I2)/sqrt(R)
#c
R <- 1000
my_integral <- function(f, g, R){
x <- rnorm(R)
mean((f(x)/g(x))*dnorm(x))
}
#a
R <- 10^5
set.seed(123)
I1 <- mean(exp(sqrt(runif(R, 0, 1)*runif(R, 0, 1))))
#b
set.seed(123)
I2 <- mean(exp(sqrt(runif(R, 0,2))))  #2.703
sd(I2)/sqrt(R)
#c
R <- 1000
my_integral <- function(f, g, R){
x <- rnorm(R)
mean((f(x)/g(x))*dnorm(x))
}
library(MASS)
data("faithful")
hist(faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
long_waiting <- faithful$waiting[faithful$eruptions >3]
short_waiting <- faithful$waiting[faithful$eruptions <=3]
ecdf_long <- ecdf(long_waiting)
ecdf_short <- ecdf(short_waiting)
par(mfrow=c(1,2))
plot(ecdf_long, col="red")
plot(ecdf_short, col="blue")
mean(long_waiting)  #79.988
median(long_waiting)#80
mean(short_waiting) #54.494
median(short_waiting) #54
asym <- function(x){
q1 <- quantile(ecdf(x), 0.25)
q2 <- quantile(ecdf(x), 0.5)
q3 <- quantile(ecdf(x), 0.75)
(q3-2*q2+q1)/(q3-q1)
}
asym(long_waiting) #0
asym(short_waiting) #0.1111
#a
R <- 10^3
qJB <- function(p, n, R){
v <- 0
for(i in 1:R){
X <- rnorm(n)
P_asym <- (1/sd(X)^3)*mean((X-mean(X))^3)
P_curt <- (1/sd(X)^4)*mean((X-mean(X))^4)
JB <- (n/6)*(P_asym^2+((P_curt-3)^2)/4)
v[i] <- JB
}
e <- ecdf(v)
quantile(e, p)
}
qJB(0.95, 50, 1000) #circa 4.64
#Problema 2
data("faithful")
hist(faithful$waiting)
plot(faithful$eruptions~faithful$waiting)
short_waiting<-faithful$waiting[faithful$eruptions <=3]
long_waiting<- faithful$waiting[faithful$eruptions >3]
summary(long_waiting) #media=4.291 median=4.333
summary(short_waiting) #media=2.038 median=1.983
plot(cumsum(long_waiting))
asym<-function(x){
q1<-as.numeric(summary(x)[2])
q2<-as.numeric(summary(x)[3])
q3<-as.numeric(summary(x)[5])
B<-(q3-2*q2+q1)/(q3-q1)
out<-B
out
}
asym(long_waiting)
asym(short_waiting)
#Problema 3
yps <- function(n,R) {
x <- rnorm(R)
est<- mean(x)
y <-(1/(sd(x) / sqrt(R))^3)*1/n*sum(1:n,(x-est)^3)
out <- y
out
}
kpa <- function(n,R) {
x <- rnorm(R)
est<- mean(x)
k <-(1/(sd(x) / sqrt(R))^4)*1/n*sum(1:n,(x-est)^4)
out <- k
out
}
qJB <- function(p,n,R) {
x <- rnorm(R)
est<- mean(x)
qJB <-((n/6)*(yps(n,R)+((kpa(n,R)-3)^2)/4))
out<-qJB
out<-x
}
y<-yps(50,1000)
k<-kpa(50,1000)
q<-qJB(50,1000)
#ESERCIZIO 1
#A
B<-function(x,y){
exp(sqrt(x*y))
}
set.seed(123)
R<- 10^5
double(integrate(B,lower=0,upper = 1))
A<-function(x){
exp(sqrt(x))
}
set.seed(123)
integrate(A,lower=0,upper=2)
#C
set.seed(123)
my_integral<-function(f,g,R=1000){
f<-(rnorm(R))
g<-(rnorm(R))
mean((f/g)*dnorm(R))
}
#ESERCIZIO2
#A
library(MASS)
data(faithful)
hist(faithful$waiting)
plot(faithful$eruptions,faithful$waiting)
#B
faithful$long_waiting<-(faithful$eruptions > 3)
faithful$short_waiting<-(faithful$eruptions<= 3)
par(mfrow=c(1,2))
plot(ecdf(faithful$long_waiting))
plot(ecdf(faithful$short_waiting))
mean(faithful$long_waiting)
median(faithful$long_waiting)
mean(faithful$short_waiting)
median(faithful$short_waiting)
asym<-function(x){
Q1<-quantile(x,probs=c(0.75),type=1)
Q2<-quantile(x,probs=c(0.25),type=1)
Q3<-quantile(x,probs=c(0.50),type=1)
(Q1-2*Q3+Q2)/(Q1-Q2)
}
asym(faithful$short_waiting)
asym(faithful$long_waiting)
qJB<-function(p,n,R=1000){
k<-(mean(x-mean(x)^4)/sd(x)^4)
l<-(mean(x-mean(x)^3)/(sd(x)^3))
(n/6)*(rnorm(l^2)+(rnorm(k)-3)^2/4)
}
qJB(0.95,50,1000)
#punto a
set.seed(123)
R <- 10^5
x <- rexp(R)
y <- rexp(R)
hxy <- exp(sqrt(x*y))
mean(hxy)
#punto b
set.seed(123)
R <- 10^5
x <- rexp(R)
hx <- exp(sqrt(x))
mean(hx)
sd(hx)/sqrt(R)
#punto c
my_integral <- function(f,g,R=1000) {
x <- rnorm(R)
mean((f(x)/g(x))*dnorm(x))
}
mean(hxy)
#punto b
set.seed(123)
R <- 10^5
x <- rexp(R)
hx <- exp(sqrt(x))
mean(hx)
sd(hx)/sqrt(R)
#punto c
my_integral <- function(f,g,R=1000) {
x <- rnorm(R)
mean((f(x)/g(x))*dnorm(x))
}
#punto a
library(MASS)
data("faithful")
hist(faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
#punto b
long_waiting <- faithful$waiting[faithful$eruptions>3]
short_waiting <- faithful$waiting[faithful$eruptions<=3]
#punto c
par(mfrow=c(1,2))
plot(ecdf(long_waiting), col="green")
plot(ecdf(short_waiting), col="red")
summary(long_waiting)
summary(short_waiting)
#punto d
asym <- function(x) {
q1 <- quantile(x, probs=0.25)
q2 <- quantile(x, probs=0.50)
q3 <- quantile(x, probs=0.75)
(q3 - 2*q2 + q1) / (q3 - q1)
}
asym(short_waiting)
asym(long_waiting)
#punto a
qJB <- function(p,n,R) {
asimmetria <- sum((x-mean(x))^3) / (n * sd(x)^3)
curtosi <- sum((x-mean(x))^4) / (n * sd(x)^4)
x <- rnorm(n, 0, 1)
jb <- replicate(R, (n/6)*(asimmetria^2 + (((curtosi-3)^2)/4)))
quantile(jb, probs=p)
}
#punto b
qJB(0.95, 50, 1000)
I1<-mean(exp(sqrt(runif(10^5)*runif(10^5))))
I1
#1.600012
I2<-mean(exp(sqrt(runif(10^5,0,2))))
I2
#2.703723
precisione<-sd(exp(sqrt(runif(10^5,0,2))))/sqrt(10^5)
precisione
#0.00259866
my_integral<-function(f,g,R=1000){
x<-rnorm(R)
mean(f(x)/g(x))
}
library(MASS)
data("faithful")
f<-faithful
hist(f$waiting)
plot(f$eruptions,f$waiting)
long_waiting<-f$waiting[f$eruptions>3]
short_waiting<-f$waiting[f$eruptions<=3]
plot(ecdf(long_waiting),xlim=c(30,100))
plot(ecdf(short_waiting),add=T,col="redx{[J")
summary(long_waiting)
summary(short_waiting)
asym<-function(x){
(quantile(x,0.75,names=F)-2*quantile(x,0.5,names=F)+quantile(x,0.25,names=F))/(quantile(x,0.75,names=F)-quantile(x,0.25,names=F))
}
plot(ecdf(short_waiting),add=T,col="red")
summary(long_waiting)
summary(short_waiting)
asym<-function(x){
(quantile(x,0.75,names=F)-2*quantile(x,0.5,names=F)+quantile(x,0.25,names=F))/(quantile(x,0.75,names=F)-quantile(x,0.25,names=F))
}
asym(long_waiting)
#0
asym(short_waiting)
y<-function(x)(mean((x-mean(x))^3))/(sd(x)^3)
k<-function(x)(mean((x-mean(x))^4))/(sd(x)^4)
qJB<-function(p,n,R){
JB<-rep(0,R)
x<-replicate(R,rnorm(n))
for (i in 1:R){
JB[i]<-n*((y(x[,i]))^2+(k(x[,i])-3)/4)/6
}
quantile(JB,p,names=F)
}
qJB(0.95,50,1000)
# 1.1
R <- 10^6
x <- runif(R)
y <- runif(R)
mean(exp(sqrt(x * y)))
# Non richiesto. Verifico il risultato tramite integrazione numerica
library(cubature)
f <- function(z) exp(sqrt(z[1] * z[2]))
adaptIntegrate(f, lowerLimit = c(0,0), upperLimit = c(1, 1))
# 1.2
x <- runif(R, 0, 2)
g <- function(x) 2 * exp(sqrt(x)) # Attenzione al fatto che bisogna moltiplicare per 2, per tenere conto della costante di normalizzazione di una distribuzione uniforme in (0, 2)
est <- mean(g(x))
std_error <- sd(g(x)) / sqrt(R)
c(est, std_error)
hcubature(f, lowerLimit = c(0,0), upperLimit = c(1, 1))
# 1.2
x <- runif(R, 0, 2)
g <- function(x) 2 * exp(sqrt(x)) # Attenzione al fatto che bisogna moltiplicare per 2, per tenere conto della costante di normalizzazione di una distribuzione uniforme in (0, 2)
est <- mean(g(x))
std_error <- sd(g(x)) / sqrt(R)
c(est, std_error)
# Non richiesto. Verifico il risultato tramite integrazione numerica:
integrate(function(x) exp(sqrt(x)), lower = 0, upper = 2)
# Le funzioni f(x) e g(x) devono essere valutate sullo stesso insieme di valori. La soluzione corretta Ã¨ quindi:
my_integral <- function(f, g, R = 1000) {
x <- rnorm(R)
mean(f(x) / g(x))
}
# Problema 2
library(MASS)
data(faithful)
# 2.1
hist(faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
# 2.2
long_waiting <- faithful$waiting[faithful$eruptions > 3]
short_waiting <- faithful$waiting[faithful$eruptions <= 3]
# 2.3
plot(ecdf(long_waiting), xlim = c(40, 100)) # Il parametro xlim doveva essere aggiustato
plot(ecdf(short_waiting), add = TRUE, col = "red")
summary(long_waiting)
summary(short_waiting)
# 2.4
asym <- function(x){
Q <- quantile(x, probs = c(0.25, 0.5, 0.75))
B <- (Q[1] + Q[3] - 2 * Q[2]) / (Q[3] - Q[1])
B
}
asym(long_waiting)
asym(short_waiting)
# 2.1
JB <- function(x){
n <- length(x)
gamma <- mean((x - mean(x))^3) / sd(x)^3
kappa <- mean((x - mean(x))^4) / sd(x)^4
n / 6 * (gamma^2 + (kappa - 3)^2 / 4)
}
qJB <- function(p, n, R = 1000){
sim <- replicate(R, JB(rnorm(n)))
quantile(sim, probs = p)
}
# 2.2
qJB(p = 0.95, n = 50, R = 10000)
styler:::style_active_file()
# 1.1
set.seed(123)
R <- 10^6
x <- runif(R)
y <- runif(R)
mean(exp(sqrt(x * y)))
# Non richiesto. Verifico il risultato tramite integrazione numerica
library(cubature)
f <- function(z) exp(sqrt(z[1] * z[2]))
hcubature(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))
hcubature(f, lowerLimit = c(0, 0), upperLimit = c(1, 1))$integral
# 1.2
x <- runif(R, 0, 2)
# Attenzione al fatto che bisogna moltiplicare per 2 la seguente funzione, per tenere conto della costante di normalizzazione di una distribuzione uniforme in (0, 2)
g <- function(x) 2 * exp(sqrt(x))
est <- mean(g(x))
std_error <- sd(g(x)) / sqrt(R)
c(est, std_error)
# Non richiesto. Verifico il risultato tramite integrazione numerica:
integrate(function(x) exp(sqrt(x)), lower = 0, upper = 2)
# Problema 2 --------------------------------
library(MASS)
data(faithful)
# 2.1
hist(faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
# 2.2
long_waiting <- faithful$waiting[faithful$eruptions > 3]
short_waiting <- faithful$waiting[faithful$eruptions <= 3]
# 2.3
plot(ecdf(long_waiting), xlim = c(40, 100)) # Il parametro xlim doveva essere aggiustato
plot(ecdf(short_waiting), add = TRUE, col = "red")
# Quanto segue Ã¨ la soluzione piÃ¹ elegante, che consente di confrontare le due funzioni di ripartizione
# Anche due grafici sono stati valutati positivamente (anche se di piÃ¹ difficile lettura)
plot(ecdf(long_waiting), xlim = c(40, 100)) # Il parametro xlim deve essere manualmente aggiustato, altrimenti il grafico risulta illeggibile
plot(ecdf(short_waiting), add = TRUE, col = "red")
# Anche calcolare mean e median separatamente era corretto
summary(long_waiting)
# Anche calcolare mean e median separatamente era corretto
summary(long_waiting)
summary(short_waiting)
# 2.4
asym <- function(x) {
Q <- quantile(x, probs = c(0.25, 0.5, 0.75))
B <- (Q[1] + Q[3] - 2 * Q[2]) / (Q[3] - Q[1])
B
}
asym(long_waiting)
asym(short_waiting)
# 2.1
JB <- function(x) {
n <- length(x)
gamma <- mean((x - mean(x))^3) / sd(x)^3
kappa <- mean((x - mean(x))^4) / sd(x)^4
n / 6 * (gamma^2 + (kappa - 3)^2 / 4)
}
# Un possibile modo di ragionare era basato sulla funzione replicate (usata nel modo giusto!)
# Soluzioni corrette basate su "cicli for" sono state valutate positivamente.
qJB <- function(p, n, R = 1000) {
sim <- replicate(R, JB(rnorm(n)))
quantile(sim, probs = p)
}
# 2.2
qJB(p = 0.95, n = 50, R = 10000)
# 2.2
set.seed(123)
qJB(p = 0.95, n = 50, R = 10000)
styler:::style_active_file()
