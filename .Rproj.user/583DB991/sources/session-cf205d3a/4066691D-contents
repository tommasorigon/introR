#problema1

#1a
f<-function(x){
  exp(x)/(1+exp(x))}

#1b
f(2) #0.8807971
curve(f(x),-4,4)

#1c

f2<-function(x){
  exp(x)/(1+exp(x))^2}
integrate(f2,0,2) #0.3807971 with absolute error < 4.2e-15

set.seed(123)
 R<-10^6
 U<-runif(R,0,1)
 mean(2*(U/(1+U)^2)) # 0.3860449 i risultati si assomigliano molto

#1d

k<-(0:100)
sum(exp(-1)/factorial(k))  #1

sum(k^2*(exp(-1)/factorial(k)))  #2

#Problema 2

#2a
gg<-(1:365)
R<-30000

verifica<-function(x){    
   for (i in x) 
   {for (j in x) 
   {if (x[i]!=x[j])
   { s=1 } 
   else {s=0}}}
   s
 }


sim<-replicate(R,sample(gg,30,replace=TRUE))
est<-mean(verifica(sim)) #la funzione verifica ha in realt? dei difetti da risolvere , l'idea era di creare una funzione nella cui inserire un vettore da 30 elementi per verificare che fossero tutti diversi e in tal caso restituire 1 

#2b
prob<-c(rep(2/400,35),rep(1/400,330)) #probabilit? aggiustate affinch? la probabilit? di nascere nei primi 35 giorni dell'anno sia doppia
sim2<-replicate(R,sample(gg,30,replace=TRUE,prob=prob))
est<-mean(verifica(sim2))  #come visto al punto precedente, la funzione verifica ha in realt? dei difetti

#Problema 3

library(MASS)
data(forbes)

#3a
?forbes
#A data frame with 17 observations on boiling point of water and barometric pressure in inches of mercury.
#bp rappresenta la temperatura di ebollizione (in gradi farheneit)
#pres rappresenta la pressione barometrica

#3b
summary(forbes$bp)
summary(forbes$pres)
boxplot.stats(forbes$bp)
boxplot.stats(forbes$pres)
#si vede che non sono presenti outlier nelle distribuzioni 

#3c
hist(forbes$bp)
hist(forbes$pres)

#3d-e
plot(forbes$bp,forbes$pres)
cor(forbes$bp,forbes$pres) #0.9972102

#3f
x<-forbes$bp
y<-forbes$pres
beta_hat<-cov(x,y)/var(x)
alpha_hat<-mean(y)-beta_hat*mean(x)
alpha_hat #-81.06373
beta_hat  #0.5228924

#3g
plot(forbes$bp,forbes$pres)
abline(a=alpha_hat,b=beta_hat)
#il modello si adatta perfettamente ai dati











